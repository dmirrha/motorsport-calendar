name: Tests

on:
  push:
    branches: [ main, chore/**, feat/**, fix/** ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest pytest-cov

      - name: Run tests
        env:
          TZ: America/Sao_Paulo
        run: |
          mkdir -p test_results
          pytest \
            --cov=src --cov=sources \
            --cov-report=term-missing:skip-covered \
            --cov-report=xml:coverage.xml \
            --cov-report=html \
            --junitxml=test_results/junit.xml

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            test_results/junit.xml
            coverage.xml
            htmlcov/

      - name: Upload coverage to Codecov (unit)
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          flags: unit
          fail_ci_if_error: false
          verbose: true

  e2e_happy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest pytest-cov

      - name: Run E2E happy with coverage (no gate)
        env:
          TZ: America/Sao_Paulo
        run: |
          mkdir -p test_results_e2e
          pytest -q -c /dev/null \
            tests/integration/test_phase2_e2e_happy.py -k happy \
            --cov=src --cov=sources \
            --cov-report=term-missing:skip-covered \
            --cov-report=xml:coverage_e2e.xml \
            --cov-report=html:htmlcov-e2e \
            --junitxml=test_results_e2e/junit.xml

      - name: Upload E2E artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-happy-artifacts
          path: |
            test_results_e2e/junit.xml
            coverage_e2e.xml
            htmlcov-e2e/
  
  integration:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest pytest-cov

      - name: Run integration tests with coverage (no gate)
        env:
          TZ: America/Sao_Paulo
        run: |
          mkdir -p test_results_integration
          pytest -q -c /dev/null -m integration \
            --cov=src --cov=sources \
            --cov-report=term-missing:skip-covered \
            --cov-report=xml:coverage_integration.xml \
            --cov-report=html:htmlcov-integration \
            --junitxml=test_results_integration/junit.xml

      - name: Upload integration artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-artifacts
          path: |
            test_results_integration/junit.xml
            coverage_integration.xml
            htmlcov-integration/

      - name: Upload coverage to Codecov (integration)
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: coverage_integration.xml
          flags: integration
          fail_ci_if_error: false
          verbose: true
